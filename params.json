{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Attempt at a github pages blog type thing ","google":"","body":"### What is this, really?\r\nWell lets give this a try.  I'm simultaneously trying ruhroh and jekyl bootstrap, because people seem to use that.  The plan is to start another account for hosting projects I have going on right now and devoting this to my Algorithms in C/Design Patterns in Java/Learn Computer Science side project.  At some point if I do something worth sharing I will make a third account.  If the third account does end up happening it will probably initially have the perl scripts I've written that actually work.  New account name for projects is VijayEdwin, creative I know.  And now to see if I get this github Markdown thing a test in the spirit of this account: \r\n\r\nFirst you must allocate\r\n```\r\nstruct node* newNode;\r\nnewNode = malloc(sizeof(struct node));\r\nnewNode ->date = 46290;\r\n```\r\nPoint Assignment step:  You *share* with the head's *next*.  Meaning whatever head points to \r\nnewNode will also point to it.  Currently head point to the first struct in the list.  Nice.\r\n```\r\nnewNode ->next = head;\r\n```\r\nKeep in mind at this point Head still point to the first item (now second after insertion).  So this final step point head to newNode (the node we just inserted in the previous step).  Cool\r\n```\r\nhead = newNode;\r\n```\r\n**Node Inserted**\r\n\r\n### Goals\r\nSo more specifically I want to really go through many of the tree and linked list algorithms using C pointer syntax.  I think these ideas are expressed using the concept of a pointer and C implements pointers, so why not do it that way?  I've tried this in java using Node classes, but I've been drawn to C (it has quite the reputation), so that what's happening.\r\n\r\nAdditionally I want to go through some the popular design patterns and write them down in java.  This became especially when I started using the observer pattern in my senior project and finally realized how one could use these things effectively (apparently most people do *not* use the effectively).   ","name":"Vijaylistz.github.com"}